<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="UnitTests">
    <property environment="env"/>
    <property name="junit.output.dir" value="bin/junit"/>
    <property name="FailFast.location" value="../FailFast"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.7"/>
    <property name="source" value="1.7"/>
    <path id="FailFast.classpath">
        <pathelement location="${FailFast.location}/bin"/>
    </path>
    <path id="UnitTests.classpath">
        <pathelement location="bin"/>
        <path refid="FailFast.classpath"/>
        <pathelement location="../3rd/junit-4.11/lib/hamcrest-core-1.3.jar"/>
        <pathelement location="../3rd/junit-4.11/lib/junit-4.11.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall">
        <ant antfile="build-eclipse-generated.xml" dir="${FailFast.location}" inheritAll="false" target="clean"/>
    </target>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects">
        <ant antfile="build-eclipse-generated.xml" dir="${FailFast.location}" inheritAll="false" target="build-project"/>
    </target>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="UnitTests.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target name="BooleanDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanEqualsTest.testBooleanEqualsNoFail">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanFalseTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanFalseTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanNotDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanNotEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanNotNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanNotSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanTrueTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanTrueTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanValueDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.booleans.BooleanValueDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanValueEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.booleans.BooleanValueEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanValueFalseTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.booleans.BooleanValueFalseTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanValueNotDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.booleans.BooleanValueNotDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanValueNotEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.booleans.BooleanValueNotEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanValueTrueTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.booleans.BooleanValueTrueTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ByteDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ByteEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ByteGreaterOrEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ByteGreaterTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteGreaterTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ByteInsideTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteInsideTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ByteLessOrEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteLessOrEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ByteLessTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteLessTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ByteNotDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteNotDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ByteNotEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteNotEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ByteNotNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteNotNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ByteNotSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteNotSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ByteNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ByteOutsideTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteOutsideTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ByteSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="CharacterDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="CharacterEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="CharacterGreaterOrEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="CharacterGreaterTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterGreaterTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="CharacterInsideTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterInsideTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="CharacterLessOrEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterLessOrEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="CharacterLessTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterLessTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="CharacterNotDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterNotDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="CharacterNotEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterNotEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="CharacterNotNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterNotNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="CharacterNotSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterNotSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="CharacterNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="CharacterOutsideTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterOutsideTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="CharacterSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DateDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DateEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DateGreaterOrEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DateGreaterTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateGreaterTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DateInsideTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateInsideTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DateLessOrEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateLessOrEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DateLessTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateLessTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DateNotDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateNotDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DateNotEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateNotEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DateNotNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateNotNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DateNotSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateNotSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DateNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DateOutsideTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateOutsideTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DateSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DoubleDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DoubleEqualsAlmostTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleEqualsAlmostTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DoubleEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DoubleGreaterOrEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DoubleGreaterTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleGreaterTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DoubleInsideTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleInsideTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DoubleLessOrEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleLessOrEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DoubleLessTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleLessTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DoubleNotDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleNotDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DoubleNotEqualsAlmostTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleNotEqualsAlmostTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DoubleNotEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleNotEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DoubleNotNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleNotNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DoubleNotSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleNotSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DoubleNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DoubleOutsideTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleOutsideTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="DoubleSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="EnumDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="EnumEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="EnumGreaterOrEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="EnumGreaterTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumGreaterTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="EnumLessOrEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumLessOrEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="EnumLessTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumLessTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="EnumNotDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumNotDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="EnumNotEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumNotEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="EnumNotNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumNotNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="EnumNotSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumNotSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="EnumNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="EnumOutsideTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumOutsideTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="EnumSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatEqualsAlmostTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatEqualsAlmostTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatGreaterOrEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatGreaterTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatGreaterTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatInsideTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatInsideTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatLessOrEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatLessOrEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatLessTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatLessTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatNotDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatNotDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatNotEqualsAlmostTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatNotEqualsAlmostTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatNotEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatNotEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatNotNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatNotNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatNotSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatNotSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatOutsideTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatOutsideTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueEqualsAlmostTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueEqualsAlmostTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueEqualsAlmostTest.testFloatValueEqualsAlmostOverrideFailMessage">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueEqualsAlmostTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueGreaterEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueGreaterEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueGreaterEqualsTest.testFloatValueGreaterFailNoMessage">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueGreaterEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueGreaterTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueGreaterTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueLessEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueLessEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueLessTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueLessTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueNotDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueNotDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueNotEqualsAlmostTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueNotEqualsAlmostTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueNotEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueNotEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueOutsideTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueOutsideTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueWithinTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueWithinTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="IntegerDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="IntegerEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="IntegerGreaterOrEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="IntegerGreaterTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerGreaterTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="IntegerInsideTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerInsideTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="IntegerLessOrEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerLessOrEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="IntegerLessTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerLessTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="IntegerNotDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerNotDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="IntegerNotEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerNotEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="IntegerNotNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerNotNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="IntegerNotSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerNotSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="IntegerNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="IntegerOutsideTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerOutsideTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="IntegerSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="LongDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="LongEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="LongGreaterOrEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="LongGreaterTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongGreaterTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="LongInsideTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongInsideTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="LongLessOrEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongLessOrEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="LongLessTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongLessTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="LongNotDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongNotDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="LongNotEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongNotEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="LongNotNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongNotNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="LongNotSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongNotSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="LongNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="LongOutsideTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongOutsideTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="LongSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectArrayEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectArrayEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectArrayEqualsTest.testStringArrayAndObjectArrayEquals1ObjectAnd1ObjectNoFail">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectArrayEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectCollectionEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectCollectionEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectCollectionEqualsTest.testObjectCollectionEquals0And1NoFail">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectCollectionEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectListEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectListEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNotEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNotNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNotNullTest.testObjectIsNotNullMismatchCheckCheck">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNotNullTest.testObjectIsNotNullMismatchFail">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNotSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNotSameTest.testObjectNotSameNoFail">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest.testObjectIsNotNullMismatchCheckCheck">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest.testObjectIsNotNullMismatchFail">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest.testObjectIsNullCheckerCallerIsNull">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest.testObjectIsNullCheckMismatch">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest.testObjectIsNullFailerCallerIsNull">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest.testObjectIsNullFailerCallerIsWrong">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest.testObjectIsNullFailMismatch">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest.testObjectNotNullNoFail">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest.testObjectNullCustomFailMessageFormat">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest.testObjectNullCustomFailMessageFormatAndArguments">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest.testObjectNullCustomNullPointerExceptionNoMessage">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest.testObjectNullFailerCustomFailMessageFormat">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest.testObjectNullFailerCustomFailMessageFormatAndArguments">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest.testObjectNullFailerCustomNullPointerExceptionMessage">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest.testObjectNullFailerCustomNullPointerExceptionNoMessage">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest.testObjectNullFailNoMessage">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectSameTest.testObjectSameNoFail">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectsEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectsEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectsNotEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectsNotEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectsNotEqualsTest.testObjectsArrayNotEqualsNullAndEmptyFailNoMessage">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectsNotEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ShortDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ShortEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ShortGreaterOrEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ShortGreaterTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortGreaterTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ShortInsideTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortInsideTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ShortLessOrEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortLessOrEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ShortLessTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortLessTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ShortNotDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortNotDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ShortNotEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortNotEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ShortNotNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortNotNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ShortNotSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortNotSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ShortNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ShortOutsideTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortOutsideTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ShortSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="src (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectArrayEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectCollectionEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectListEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectsEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectsNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanFalseTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanTrueTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleEqualsAlmostTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleNotEqualsAlmostTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatEqualsAlmostTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatNotEqualsAlmostTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringEmptyTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringMatchingTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotEmptyTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotMatchingTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotNullAndNotEmptyTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNullOrEmptyTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithPostfixTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithPrefixTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithSubstringTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithoutPostfixTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithoutPrefixTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithoutSubstringTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="starkcoder.failfast.unit.objects.booleans">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanFalseTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanTrueTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="starkcoder.failfast.unit.objects.bytes">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="starkcoder.failfast.unit.objects.characters">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="starkcoder.failfast.unit.objects.dates">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="starkcoder.failfast.unit.objects.doubles">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleEqualsAlmostTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleNotEqualsAlmostTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="starkcoder.failfast.unit.objects.enums">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="starkcoder.failfast.unit.objects.floats">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatEqualsAlmostTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatNotEqualsAlmostTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="starkcoder.failfast.unit.objects">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectArrayEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectCollectionEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectListEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectsEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectsNotEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="starkcoder.failfast.unit.objects.longs">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="starkcoder.failfast.unit.objects.shorts">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="starkcoder.failfast.unit.objects.strings">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringEmptyTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringMatchingTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotEmptyTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotMatchingTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotNullAndNotEmptyTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNullOrEmptyTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithPostfixTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithPrefixTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithSubstringTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithoutPostfixTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithoutPrefixTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithoutSubstringTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="starkcoder.failfast.unit.objects.uuids">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="starkcoder.failfast.unit.primitives.booleans">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="starkcoder.failfast.unit.primitives.floats">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringEmptyTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringEmptyTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringGreaterOrEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringGreaterTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringGreaterTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringLessOrEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringLessOrEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringLessTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringLessTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringMatchingTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringMatchingTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringMatchingTest.testStringNonEmptyWithMatchingPrefixFail">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringMatchingTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringNotDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringNotEmptyTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotEmptyTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringNotEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringNotMatchingTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotMatchingTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringNotMatchingTest.testStringEmptyWithEmptySubstringNoFail">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotMatchingTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringNotMatchingTest.testStringNonEmptyWithEmptySubstringFail">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotMatchingTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringNotMatchingTest.testStringNonEmptyWithEmptySubstringNoFail">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotMatchingTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringNotMatchingTest.testStringNonEmptyWithNullSubstringFail">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotMatchingTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringNotMatchingTest.testStringNonEmptyWithSelfSubstringNoFail">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotMatchingTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringNotNullAndNotEmptyTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotNullAndNotEmptyTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringNotNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringNotSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringNullOrEmptyTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNullOrEmptyTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringWithoutPostfixTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithoutPostfixTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringWithoutPrefixTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithoutPrefixTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringWithoutSubstringTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithoutSubstringTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringWithPostfixTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithPostfixTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringWithPrefixTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithPrefixTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringWithSubstringTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithSubstringTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="UnitTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectArrayEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectCollectionEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectListEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectsEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectsNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanFalseTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanTrueTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.bytes.ByteSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.characters.CharacterSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.dates.DateSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleEqualsAlmostTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleNotEqualsAlmostTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.doubles.DoubleSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.enums.EnumSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatEqualsAlmostTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatNotEqualsAlmostTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.floats.FloatSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.integers.IntegerSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.longs.LongSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.shorts.ShortSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringEmptyTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringMatchingTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotEmptyTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotMatchingTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotNullAndNotEmptyTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNullOrEmptyTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithPostfixTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithPrefixTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithSubstringTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithoutPostfixTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithoutPrefixTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithoutSubstringTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidInsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidLessOrEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="UuidDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="UuidEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="UuidGreaterOrEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidGreaterOrEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="UuidGreaterTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidGreaterTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="UuidInsideTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidInsideTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="UuidLessOrEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidLessOrEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="UuidLessTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidLessTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="UuidNotDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidNotDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="UuidNotEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidNotEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="UuidNotNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidNotNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="UuidNotSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidNotSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="UuidNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="UuidOutsideTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidOutsideTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="UuidSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.uuids.UuidSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>

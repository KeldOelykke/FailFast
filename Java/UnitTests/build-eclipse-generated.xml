<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- WARNING: Eclipse auto-generated file.
              Any modifications will be overwritten.
              To include a user specific buildfile here, simply create one in the same
              directory with the processing instruction <?eclipse.ant.import?>
              as the first entry and export the buildfile again. --><project basedir="." default="build" name="UnitTests">
    <property environment="env"/>
    <property name="junit.output.dir" value="bin/junit"/>
    <property name="FailFast.location" value="../FailFast"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.7"/>
    <property name="source" value="1.7"/>
    <path id="FailFast.classpath">
        <pathelement location="${FailFast.location}/bin"/>
    </path>
    <path id="UnitTests.classpath">
        <pathelement location="bin"/>
        <path refid="FailFast.classpath"/>
        <pathelement location="../3rd/junit-4.11/lib/hamcrest-core-1.3.jar"/>
        <pathelement location="../3rd/junit-4.11/lib/junit-4.11.jar"/>
    </path>
    <target name="init">
        <mkdir dir="bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.launch"/>
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    <target name="clean">
        <delete dir="bin"/>
    </target>
    <target depends="clean" name="cleanall">
        <ant antfile="build-eclipse-generated.xml" dir="${FailFast.location}" inheritAll="false" target="clean"/>
    </target>
    <target depends="build-subprojects,build-project" name="build"/>
    <target name="build-subprojects">
        <ant antfile="build-eclipse-generated.xml" dir="${FailFast.location}" inheritAll="false" target="build-project"/>
    </target>
    <target depends="init" name="build-project">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="src"/>
            <classpath refid="UnitTests.classpath"/>
        </javac>
    </target>
    <target description="Build all projects which reference this project. Useful to propagate changes." name="build-refprojects"/>
    <target name="BooleanDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanFalseTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanFalseTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanNotDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanNotEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanNotNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanTrueTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanTrueTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanValueDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.booleans.BooleanValueDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanValueEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.booleans.BooleanValueEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanValueFalseTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.booleans.BooleanValueFalseTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanValueNotDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.booleans.BooleanValueNotDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanValueNotEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.booleans.BooleanValueNotEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="BooleanValueTrueTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.booleans.BooleanValueTrueTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueEqualsAlmostTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueEqualsAlmostTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueEqualsAlmostTest.testFloatValueEqualsAlmostOverrideFailMessage">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueEqualsAlmostTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueGreaterEqualsTest.testFloatValueGreaterFailNoMessage">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueGreaterEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueGreaterTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueGreaterTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueLessEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueLessEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueLessTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueLessTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueNotDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueNotDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueNotEqualsAlmostTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueNotEqualsAlmostTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueNotEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueNotEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueOutsideTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueOutsideTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="FloatValueWithinTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueWithinTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNotEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNotNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNotNullTest.testObjectIsNotNullMismatchCheckCheck">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNotNullTest.testObjectIsNotNullMismatchFail">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNotSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNotSameTest.testObjectNotSameNoFail">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest.testObjectIsNotNullMismatchCheckCheck">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest.testObjectIsNotNullMismatchFail">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest.testObjectIsNullCheckerCallerIsNull">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest.testObjectIsNullCheckMismatch">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest.testObjectIsNullFailerCallerIsNull">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest.testObjectIsNullFailerCallerIsWrong">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectNullTest.testObjectIsNullFailMismatch">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectSameTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="ObjectSameTest.testObjectSameNoFail">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="src (1)">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanFalseTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanTrueTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringEmptyTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotEmptyTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotNullAndNotEmptyTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNullOrEmptyTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithPostfixTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithPrefixTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithSubstringTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithoutPostfixTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithoutPrefixTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithoutSubstringTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.booleans.BooleanValueDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.booleans.BooleanValueEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.booleans.BooleanValueFalseTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.booleans.BooleanValueNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.booleans.BooleanValueNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.booleans.BooleanValueTrueTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueEqualsAlmostTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueGreaterEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueLessEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueNotEqualsAlmostTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueWithinTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="starkcoder.failfast.unit.objects">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectSameTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="starkcoder.failfast.unit.primitives.floats">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueEqualsAlmostTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueGreaterEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueLessEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueNotEqualsAlmostTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueWithinTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringEmptyTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringEmptyTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringNotDefaultTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotDefaultTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringNotEmptyTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotEmptyTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringNotEqualsTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotEqualsTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringNotNullAndNotEmptyTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotNullAndNotEmptyTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringNotNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringNullOrEmptyTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNullOrEmptyTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringNullTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNullTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="UnitTests">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.ObjectEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNotSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.ObjectSameTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanFalseTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.booleans.BooleanTrueTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringEmptyTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotEmptyTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotNullAndNotEmptyTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNotNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNullOrEmptyTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringNullTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithPostfixTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithPrefixTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithSubstringTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithoutPostfixTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithoutPrefixTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithoutSubstringTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.booleans.BooleanValueDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.booleans.BooleanValueEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.booleans.BooleanValueFalseTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.booleans.BooleanValueNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.booleans.BooleanValueNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.booleans.BooleanValueTrueTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueEqualsAlmostTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueGreaterEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueGreaterTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueLessEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueLessTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueNotDefaultTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueNotEqualsAlmostTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueNotEqualsTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueOutsideTest" todir="${junit.output.dir}"/>
            <test name="starkcoder.failfast.unit.primitives.floats.FloatValueWithinTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringWithPrefixTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithPrefixTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringWithoutPrefixTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithoutPrefixTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringWithPostfixTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithPostfixTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringWithoutPostfixTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithoutPostfixTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringWithSubstringTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithSubstringTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="StringWithoutSubstringTest">
        <mkdir dir="${junit.output.dir}"/>
        <junit fork="yes" printsummary="withOutAndErr">
            <formatter type="xml"/>
            <test name="starkcoder.failfast.unit.objects.strings.StringWithoutSubstringTest" todir="${junit.output.dir}"/>
            <classpath refid="UnitTests.classpath"/>
        </junit>
    </target>
    <target name="junitreport">
        <junitreport todir="${junit.output.dir}">
            <fileset dir="${junit.output.dir}">
                <include name="TEST-*.xml"/>
            </fileset>
            <report format="frames" todir="${junit.output.dir}"/>
        </junitreport>
    </target>
</project>

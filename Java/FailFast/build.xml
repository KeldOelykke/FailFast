<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." name="starkcoder-failfast">
	
	<import file="build-eclipse-generated.xml"/>
	
	<property name="version.major" value="0"/> 
	<property name="version.minor" value="0"/>
	
	<property name="3rd.dir" value="../3rd" />
	<property name="config.dir" value="../Config" />
	<property name="src.dir" value="src" />
	<property name="bin.dir" value="bin" />
	<property name="dist.dir" value="dist" />
	<property name="jar.dir" value="${bin.dir}/jar" />
	<property name="doc.dir" value="${bin.dir}/doc" />
	<property name="checkstyle.dir" value="${bin.dir}/checkstyle" />
	<property name="api.dir" value="${doc.dir}/api" />
	
	<!-- <property name="unittests.ant" value="../junit" /> -->
	<!-- <property name="tests.dir" value="${bin.dir}/junit" /> -->
	
	<taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties"
	         classpath="${3rd.dir}/checkstyle-6.9/lib/checkstyle-6.9-all.jar"/>
	
    <property name="main-class"	value="starkcoder.failfast.SFailFast" />
	
	<!-- ================================= 
          target: init              
         ================================= -->
    <target name="init" depends="FailFast.init" description="Initializes settings and filesystem">
		<echo message="ANT_HOME=${env.ANT_HOME}"/>
		<echo message="JAVA_HOME=${env.JAVA_HOME}"/>
		<echo message="source=${source}"/>
		<echo message="target=${target}"/>
		<echo message="debuglevel=${debuglevel}"/>
		<echo message="ant.project.name=${ant.project.name}"/>
		<echo message="version.major=${version.major}"/>
		<echo message="version.minor=${version.minor}"/>
		
		<tstamp>
		    <format property="now.mdd" pattern="MDD" locale="UTC"/>
		</tstamp>
		<tstamp>
		    <format property="now.hmm" pattern="Hmm" locale="UTC"/>
		</tstamp>
						
	    <property name="version" value="${version.major}.${version.minor}.${now.mdd}.${now.hmm}" />
		<echo message="version=${version}"/>
		<echo message="jar=${jar.dir}"/>
    </target>

	<!-- ================================= 
          target: clean              
         ================================= -->
    <target name="clean" depends="init,FailFast.clean" description="Removes temporary directories and files">
    </target>

	<!-- ================================= 
          target: cleanall              
         ================================= -->
    <target name="cleanall" depends="init,FailFast.cleanall" description="Removes temporary directories and files">
       	<ant antfile="build.xml" dir="${UnitTests.location}" inheritAll="false" target="cleanall"/>
       	<ant antfile="build.xml" dir="${Examples.location}" inheritAll="false" target="cleanall"/>
    	<delete dir="${dist.dir}"/>
    </target>

	<!-- ================================= 
          target: build              
         ================================= -->
    <target name="build" depends="init,FailFast.build,checkstyle" description="Builds the code">
    </target>

	<!-- ================================= 
          target: checkstyle              
         ================================= -->
    <target name="checkstyle" depends="init" description="Runs checkstyle against the code">
        
    	<mkdir dir="${checkstyle.dir}"/>

    	<checkstyle config="${config.dir}/Checkstyle/checkstyle_googlebased_changed.xml">
    	  <fileset dir="${src.dir}" includes="**/*.java"/>
    	  <formatter type="plain"/>
    	  <!-- <formatter type="xml" toFile="${checkstyle.dir}/checkstyle_errors.xml"/> -->
    	</checkstyle>
     </target>

    <!-- ================================= 
          target: dist              
         ================================= -->
	<property name="dist.html.htmlhead" value="&lt;html&gt;&lt;head&gt;" />
	<property name="dist.html.title" value="&lt;title&gt;FailFast v.${version.major}.${version.minor}&lt;/title&gt;" />
	<property name="dist.html.headbody" value="&lt;/head&gt;&lt;body&gt;" />
	<property name="dist.html.heading" value="&lt;h3&gt;FailFast v.${version.major}.${version.minor}&lt;/h3&gt;" />
	<property name="dist.html.apistart" value="&lt;a href='api/index.html'&gt;api (javadoc)&lt;/a&gt;" />
	<property name="dist.html.unitstart" value="&lt;a href='unit/index.html'&gt;unit tests (junit)&lt;/a&gt;" />
	<property name="dist.html.examplesstart" value="&lt;a href='examples/index.html'&gt;examples tests (junit)&lt;/a&gt;" />
	<property name="dist.html.break" value="&lt;br/&gt;" />
	<property name="dist.html.jar" value="&lt;a href='jar/${ant.project.name}-${version.major}.${version.minor}.jar'&gt;${ant.project.name}-${version.major}.${version.minor}.jar&lt;/a&gt;" />
	<property name="dist.html.jar.src" value="&lt;a href='jar/${ant.project.name}-${version.major}.${version.minor}-src.jar'&gt;${ant.project.name}-${version.major}.${version.minor}-src.jar&lt;/a&gt;" />
	<property name="dist.html.jar.javadoc" value="&lt;a href='jar/${ant.project.name}-${version.major}.${version.minor}-javadoc.jar'&gt;${ant.project.name}-${version.major}.${version.minor}-javadoc.jar&lt;/a&gt;" />
	<property name="dist.html.jar.all" value="&lt;a href='jar/${ant.project.name}-${version.major}.${version.minor}-all.jar'&gt;${ant.project.name}-${version.major}.${version.minor}-all.jar&lt;/a&gt;" />
	<property name="dist.html.bodyhtml" value="&lt;/body&gt;&lt;/html&gt;" />

	<property name="dist.version.dir" value="${dist.dir}/${version.major}.${version.minor}" />

    <target name="dist" depends="init,build" description="Builds distribution">
    	
    	<ant antfile="build.xml" dir="${UnitTests.location}" inheritAll="false" target="unitreport">
    		<property name="version.major" value="${version.major}"/>
    		<property name="version.minor" value="${version.minor}"/>
    	</ant>
    	<ant antfile="build.xml" dir="${Examples.location}" inheritAll="false" target="unitreport" >
    		<property name="version.major" value="${version.major}"/>
    		<property name="version.minor" value="${version.minor}"/>
    	</ant>
    	
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${dist.version.dir}"/>
    	<ant target="jar">
    	</ant>
    	<ant target="jar-src">
    	</ant>
       	<ant target="jar-javadoc">
        	</ant>
       	<ant target="jar-all">
        	</ant>
    	<copy todir="${dist.version.dir}/jar">
    		<fileset dir="${jar.dir}">
    		</fileset>
    	</copy>
    	
    	<copy todir="${dist.version.dir}/api">
    		<fileset dir="${api.dir}">
    		</fileset>
    	</copy>
    	
    	<copy todir="${dist.version.dir}/unit">
    		<fileset dir="${UnitTests.location}/bin/junit"
    			excludes="*.xml"
    		>
    		</fileset>
    	</copy>
    	
    	<copy todir="${dist.version.dir}/examples">
    		<fileset dir="${Examples.location}/bin/junit"
    			excludes="*.xml"
    		>
    		</fileset>
    	</copy>
    	
    	<echo file="${dist.version.dir}/index.html" append="false">
    		${dist.html.htmlhead}
    		${dist.html.title}
			${dist.html.headbody}
			${dist.html.break}
			${dist.html.heading}
			${dist.html.break}
			${dist.html.apistart}
			${dist.html.break}
			${dist.html.unitstart}
			${dist.html.break}
			${dist.html.examplesstart}
			${dist.html.break}
			${dist.html.break}
			${dist.html.jar}
			${dist.html.break}
			${dist.html.jar.src}
			${dist.html.break}
			${dist.html.jar.javadoc}
			${dist.html.break}
			${dist.html.jar.all}
    		${dist.html.bodyhtml}
    	</echo>
    	
    </target>
	
	<!-- ================================= 
          target: jar              
         ================================= -->
    <target name="jar" depends="build" description="Builds a jar file">
       	
            <mkdir dir="${jar.dir}"/>
    		<jar destfile="${jar.dir}/${ant.project.name}-${version.major}.${version.minor}.jar">
                <manifest>
                    <attribute name="Main-Class" value="${main-class}"/>
                </manifest>
               	<fileset dir="${bin.dir}"
             		includes="**/*.class"
             		excludes="jar,doc"
    			/>
            </jar>
    </target>

	<!-- ================================= 
          target: jar-src              
         ================================= -->
    <target name="jar-src" depends="build" description="Builds a jar file with source files">
       	
            <mkdir dir="${jar.dir}"/>
    		<jar destfile="${jar.dir}/${ant.project.name}-${version.major}.${version.minor}-src.jar">
                <manifest>
                    <attribute name="Main-Class" value="${main-class}"/>
                </manifest>
               	<fileset dir="${src.dir}"
             		includes="**/*.java"
    			/>
            </jar>
    </target>

	<!-- ================================= 
          target: jar-javadoc              
         ================================= -->
    <target name="jar-javadoc" depends="build,javadoc" description="Builds a jar file with api files">
       	
            <mkdir dir="${jar.dir}"/>
    		<jar destfile="${jar.dir}/${ant.project.name}-${version.major}.${version.minor}-javadoc.jar">
                <manifest>
                    <attribute name="Main-Class" value="${main-class}"/>
                </manifest>
               	<fileset dir="${api.dir}"
             		includes="**/*.*"
    			/>
            </jar>
    </target>

	<!-- ================================= 
          target: jar-all              
         ================================= -->
    <target name="jar-all" depends="build" description="Builds a jar file with source and class files">
       	
            <mkdir dir="${jar.dir}"/>
    		<jar destfile="${jar.dir}/${ant.project.name}-${version.major}.${version.minor}-all.jar">
                <manifest>
                    <attribute name="Main-Class" value="${main-class}"/>
                </manifest>
               	<fileset dir="${src.dir}"
             		includes="**/*.java"
    			/>
              	<fileset dir="${bin.dir}"
             		includes="**/*.class"
             		excludes="jar"
    			/>
              	<fileset dir="${api.dir}"
             		includes="**/*.*"
    			/>
             </jar>
    </target>
	
	<!-- ================================= 
          target: javadoc              
         ================================= -->
    <target name="javadoc" depends="build" description="Builds a javadoc">
    	
	  <javadoc packagenames="starkcoder.failfast.*"
	           sourcepath="src"
	           excludepackagenames="starkcoder.failfast.unit.*"
	           defaultexcludes="yes"
	           destdir="${doc.dir}/api"
	           author="true"
	           version="true"
	           use="true"
	           windowtitle="FailFast v.${version.major}.${version.minor}">
	    <doctitle><![CDATA[<h1>FailFast v.${version.major}.${version.minor}</h1>]]></doctitle>
	    <bottom><![CDATA[<i>The MIT License (MIT) - Copyright &#169; 2014-2015 Keld Oelykke. All Rights Reserved.</i>]]></bottom>
	    <tag name="todo" scope="all" description="To do:"/>
	    <group title="FailFast" packages="starkcoder.failfast*"/>
	    <group title="Checks" packages="starkcoder.failfast.checks*"/>
	    <group title="Fails" packages="starkcoder.failfast.fails*"/>
	    <link offline="true" href="http://docs.oracle.com/javase/7/docs/api/" packagelistLoc="C:\tmp"/>
	    <link href="http://docs.oracle.com/javase/7/docs/api/"/>
	  </javadoc>
    	
    </target>
	
</project>
